<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <template id="kahoot_survey_runner_block" name="Kahoot Survey Runner Block">
        <section class="kahoot-survey-runner-block">
            <div id="kahoot-survey-runner-placeholder" 
                 t-att-data-survey-id="survey_id" 
                 t-att-data-survey-exists="survey_exists" 
                 t-att-data-token="token">
                <t t-if="state.get('configParamsLoaded', False)">
                    <t t-if="not state.get('tokenValid', True)">
                        <p class="feedback-message incorrect" t-out="state.get('configParams', {}).get('invalid_token', 'Invalid token')"/>
                        <a href="/" class="btn-subscribe" t-out="state.get('configParams', {}).get('back_to_home', 'Back to Home')"/>
                    </t>
                    <t t-elif="not state.get('surveyExists', True)">
                        <p class="feedback-message" t-out="formatText('survey_not_found', state.get('surveyId', ''))"/>
                        <a href="/" class="btn-subscribe" t-out="state.get('configParams', {}).get('back_to_home', 'Back to Home')"/>
                    </t>
                    <t t-elif="not state.get('questions', [])">
                        <p t-if="not state.get('feedbackMessage')" t-out="state.get('configParams', {}).get('loading_questions', 'Loading questions...')"/>
                        <p t-if="state.get('feedbackMessage')" class="feedback-message">
                            <t t-out="state.get('feedbackMessage')"/>
                            <t t-if="state.get('feedbackMessage', '').find(state.get('configParams', {}).get('session_expired', '')) >= 0">
                                <br/>
                                <a t-att-href="'/web/login?redirect=/play/' + str(state.get('surveyId', ''))" t-out="state.get('configParams', {}).get('login', 'Login')"/>
                            </t>
                        </p>
                    </t>
                    <t t-else="">
                        <div class="answer-counter">
                            <span t-out="formatText('answers_count', answers_count)"/>
                        </div>
                        <div class="progress-general">
                            <span t-out="formatText('question_progress', state.get('currentIndex', 0) + 1, len(state.get('questions', [])))"/>
                            <div class="progress-bar-general">
                                <t t-foreach="state.get('questions', [])" t-as="question" t-key="question.get('id')">
                                    <div t-att-class="'progress-segment ' + getProgressClass(question, state.get('currentIndex', 0), question_index)">
                                        <span class="answered-icon" t-out="getIndicatorSymbol(question)"/>
                                    </div>
                                </t>
                            </div>
                        </div>
                        <div class="progress-timer">
                            <span t-out="formatText('timer_format', state.get('timeLeft', 0))"/>
                            <div class="progress-bar">
                                <div class="progress-fill" t-att-style="'width:' + str(state.get('timeLeft', 0) / 15 * 100) + '%'"/>
                            </div>
                        </div>
                        <h3 class="question-title fade-in" t-key="state.get('currentIndex', 0)" t-out="state.get('currentQuestion', {}).get('title', state.get('configParams', {}).get('loading_question', 'Loading question...'))"/>
                        <ul class="options-list fade-in" t-key="state.get('currentIndex', 0)">
                            <t t-foreach="state.get('currentQuestion', {}).get('options', [])" t-as="option" t-key="option.get('id')">
                                <li t-att-class="'option-' + str(option_index)">
                                    <button t-on-click="selectOption" 
                                            t-att-data-option-id="option.get('id')" 
                                            t-att-class="'option-button option-' + str(option_index) + ' ' + getOptionClass(option.get('id'))" 
                                            t-att-disabled="isOptionDisabled()">
                                        <span class="option-shape"></span>
                                        <span class="option-text" t-out="option.get('text', '')"/>
                                    </button>
                                </li>
                            </t>
                        </ul>
                        <t t-if="state.get('feedbackMessage')">
                            <p class="feedback-message" 
                               t-att-class="state.get('feedbackMessage', '').find(state.get('configParams', {}).get('feedback_correct', '')) >= 0 and 'correct' or 'incorrect'">
                                <t t-out="state.get('feedbackMessage')"/>
                            </p>
                            <t t-if="hasExplanation()">
                                <p class="explanation">
                                    <t t-out="state.get('currentQuestion', {}).get('explanation', '')"/>
                                </p>
                            </t>
                        </t>
                    </t>
                </t>
                <t t-else="">
                    <p>Cargando configuraci√≥n...</p>
                </t>
            </div>
        </section>
    </template>
</odoo>